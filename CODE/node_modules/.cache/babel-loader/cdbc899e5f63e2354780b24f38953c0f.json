{"ast":null,"code":"import { useMemo as e, memo as r, useCallback as o, Fragment as t, useRef as i, useEffect as n } from \"react\";\nimport { useTheme as a, guessQuantizeColorScale as u, quantizeColorScalePropType as l, useDimensions as c, SvgWrapper as d, withContainer as s, ResponsiveWrapper as f, getRelativeCursor as h } from \"@nivo/core\";\nimport { BasicTooltip as p, useTooltip as g } from \"@nivo/tooltip\";\nimport v from \"prop-types\";\nimport { useInheritedColor as m, inheritedColorPropType as C } from \"@nivo/colors\";\nimport b from \"lodash/get\";\nimport y from \"lodash/isFunction\";\nimport { format as R } from \"d3-format\";\nimport { geoAzimuthalEqualArea as j, geoAzimuthalEquidistant as q, geoGnomonic as T, geoOrthographic as M, geoStereographic as W, geoEqualEarth as w, geoEquirectangular as k, geoMercator as F, geoTransverseMercator as O, geoNaturalEarth1 as L, geoPath as E, geoGraticule as S, geoContains as G } from \"d3-geo\";\nimport { useQuantizeColorScaleLegendData as x, BoxLegendSvg as B, renderLegendToCanvas as P } from \"@nivo/legends\";\nimport { jsx as N } from \"react/jsx-runtime\";\n\nfunction H() {\n  return H = Object.assign || function (e) {\n    for (var r = 1; r < arguments.length; r++) {\n      var o = arguments[r];\n\n      for (var t in o) Object.prototype.hasOwnProperty.call(o, t) && (e[t] = o[t]);\n    }\n\n    return e;\n  }, H.apply(this, arguments);\n}\n\nvar I = {\n  azimuthalEqualArea: j,\n  azimuthalEquidistant: q,\n  gnomonic: T,\n  orthographic: M,\n  stereographic: W,\n  equalEarth: w,\n  equirectangular: k,\n  mercator: F,\n  transverseMercator: O,\n  naturalEarth1: L\n},\n    D = function (r) {\n  var o = r.width,\n      t = r.height,\n      i = r.projectionType,\n      n = r.projectionScale,\n      u = r.projectionTranslation,\n      l = r.projectionRotation,\n      c = r.fillColor,\n      d = r.borderWidth,\n      s = r.borderColor,\n      f = e(function () {\n    return I[i]().scale(n).translate([o * u[0], t * u[1]]).rotate(l);\n  }, [o, t, i, n, u[0], u[1], l[0], l[1], l[2]]),\n      h = e(function () {\n    return E(f);\n  }, [f]),\n      p = e(function () {\n    return S();\n  }),\n      g = a(),\n      v = e(function () {\n    return \"function\" == typeof d ? d : function () {\n      return d;\n    };\n  }, [d]),\n      C = m(s, g),\n      b = e(function () {\n    return \"function\" == typeof c ? c : function () {\n      return c;\n    };\n  }, [c]);\n  return {\n    projection: f,\n    path: h,\n    graticule: p,\n    getBorderWidth: v,\n    getBorderColor: C,\n    getFillColor: b\n  };\n},\n    z = function (r) {\n  var o = r.features,\n      t = r.data,\n      i = r.match,\n      n = r.label,\n      a = r.value,\n      l = r.valueFormat,\n      c = r.colors,\n      d = r.unknownColor,\n      s = r.domain,\n      f = e(function () {\n    return y(i) ? i : function (e, r) {\n      var o = b(e, i),\n          t = b(r, i);\n      return o && o === t;\n    };\n  }, [i]),\n      h = e(function () {\n    return y(n) ? n : function (e) {\n      return b(e, n);\n    };\n  }, [n]),\n      p = e(function () {\n    return y(a) ? a : function (e) {\n      return b(e, a);\n    };\n  }, [a]),\n      g = e(function () {\n    return void 0 === l ? function (e) {\n      return e;\n    } : y(l) ? l : R(l);\n  }, [l]),\n      v = e(function () {\n    return u(c).domain(s);\n  }, [c, s]),\n      m = e(function () {\n    return function (e) {\n      return void 0 === e.value ? d : v(e.value);\n    };\n  }, [v, d]),\n      C = e(function () {\n    return o.map(function (e) {\n      var r = t.find(function (r) {\n        return f(e, r);\n      }),\n          o = p(r);\n\n      if (r) {\n        var i = H({}, e, {\n          data: r,\n          value: o,\n          formattedValue: g(o)\n        });\n        return i.color = m(i), i.label = h(i), i;\n      }\n\n      return e;\n    });\n  }, [o, t, f, p, g, m]),\n      j = x({\n    scale: v,\n    valueFormat: g\n  });\n  return {\n    colorScale: v,\n    getFillColor: m,\n    boundFeatures: C,\n    valueFormatter: g,\n    legendData: j\n  };\n},\n    V = r(function (e) {\n  var r = e.feature;\n  return void 0 === r.data ? null : N(p, {\n    id: r.label,\n    color: r.color,\n    enableChip: !0,\n    value: r.formattedValue\n  });\n});\n\nV.propTypes = {\n  feature: v.object.isRequired\n}, V.displayName = \"ChoroplethTooltip\";\nvar A = {\n  features: v.arrayOf(v.shape({\n    id: v.string.isRequired,\n    type: v.oneOf([\"Feature\"]).isRequired,\n    properties: v.object,\n    geometry: v.object.isRequired\n  })).isRequired,\n  projectionType: v.oneOf(Object.keys(I)).isRequired,\n  projectionScale: v.number.isRequired,\n  projectionTranslation: v.arrayOf(v.number).isRequired,\n  projectionRotation: v.arrayOf(v.number).isRequired,\n  fillColor: v.oneOfType([v.string, v.func]).isRequired,\n  borderWidth: v.oneOfType([v.number, v.func]).isRequired,\n  borderColor: C.isRequired,\n  enableGraticule: v.bool.isRequired,\n  graticuleLineWidth: v.number.isRequired,\n  graticuleLineColor: v.string.isRequired,\n  isInteractive: v.bool.isRequired,\n  onMouseEnter: v.func.isRequired,\n  onMouseMove: v.func.isRequired,\n  onMouseLeave: v.func.isRequired,\n  onClick: v.func.isRequired,\n  tooltip: v.any,\n  layers: v.arrayOf(v.oneOfType([v.oneOf([\"graticule\", \"features\"]), v.func])).isRequired\n},\n    J = H({}, A, {\n  role: v.string.isRequired\n}),\n    K = H({\n  pixelRatio: v.number.isRequired\n}, A),\n    Q = {\n  data: v.arrayOf(v.object).isRequired,\n  match: v.oneOfType([v.string, v.func]).isRequired,\n  label: v.oneOfType([v.string, v.func]).isRequired,\n  value: v.oneOfType([v.string, v.func]).isRequired,\n  valueFormat: v.oneOfType([v.string, v.func]),\n  colors: l.isRequired,\n  domain: v.arrayOf(v.number).isRequired,\n  unknownColor: v.string.isRequired,\n  layers: v.arrayOf(v.oneOfType([v.oneOf([\"graticule\", \"features\", \"legends\"]), v.func])).isRequired\n},\n    U = H({}, J, Q, {\n  role: v.string.isRequired\n}),\n    X = H({}, K, Q),\n    Y = {\n  projectionType: \"mercator\",\n  projectionScale: 100,\n  projectionTranslation: [.5, .5],\n  projectionRotation: [0, 0, 0],\n  enableGraticule: !1,\n  graticuleLineWidth: .5,\n  graticuleLineColor: \"#999999\",\n  fillColor: \"#dddddd\",\n  borderWidth: 0,\n  borderColor: \"#000000\",\n  isInteractive: !0,\n  onMouseEnter: function () {},\n  onMouseLeave: function () {},\n  onMouseMove: function () {},\n  onClick: function () {},\n  layers: [\"graticule\", \"features\"],\n  legends: []\n},\n    Z = H({}, Y, {\n  role: \"img\"\n}),\n    $ = H({}, Y, {\n  pixelRatio: \"undefined\" != typeof window && window.devicePixelRatio || 1\n}),\n    _ = {\n  match: \"id\",\n  label: \"id\",\n  value: \"value\",\n  colors: \"PuBuGn\",\n  unknownColor: \"#999\",\n  tooltip: V,\n  layers: [\"graticule\", \"features\", \"legends\"]\n},\n    ee = H({}, Z, _, {\n  role: \"img\"\n}),\n    re = H({}, $, _),\n    oe = r(function (e) {\n  var r = e.path,\n      o = e.graticule,\n      t = e.lineWidth,\n      i = e.lineColor;\n  return N(\"path\", {\n    fill: \"none\",\n    strokeWidth: t,\n    stroke: i,\n    d: r(o())\n  });\n});\noe.propTypes = {\n  path: v.func.isRequired,\n  graticule: v.func.isRequired,\n  lineWidth: v.number.isRequired,\n  lineColor: v.string.isRequired\n}, oe.displayName = \"GeoGraticule\";\nvar te = r(function (e) {\n  var r = e.feature,\n      o = e.path,\n      t = e.fillColor,\n      i = e.borderWidth,\n      n = e.borderColor,\n      a = e.onClick,\n      u = e.onMouseEnter,\n      l = e.onMouseMove,\n      c = e.onMouseLeave;\n  return N(\"path\", {\n    fill: t,\n    strokeWidth: i,\n    stroke: n,\n    strokeLinejoin: \"bevel\",\n    d: o(r),\n    onMouseEnter: function (e) {\n      return u(r, e);\n    },\n    onMouseMove: function (e) {\n      return l(r, e);\n    },\n    onMouseLeave: function (e) {\n      return c(r, e);\n    },\n    onClick: function (e) {\n      return a(r, e);\n    }\n  }, r.id);\n});\nte.propTypes = {\n  feature: v.shape({\n    id: v.string.isRequired,\n    type: v.oneOf([\"Feature\"]).isRequired,\n    properties: v.object,\n    geometry: v.object.isRequired\n  }).isRequired,\n  path: v.func.isRequired,\n  fillColor: v.string.isRequired,\n  borderWidth: v.number.isRequired,\n  borderColor: v.string.isRequired,\n  onMouseEnter: v.func.isRequired,\n  onMouseMove: v.func.isRequired,\n  onMouseLeave: v.func.isRequired,\n  onClick: v.func.isRequired\n}, te.displayName = \"GeoMapFeature\";\nvar ie = r(function (e) {\n  var r = e.width,\n      i = e.height,\n      n = e.margin,\n      u = e.features,\n      l = e.layers,\n      s = e.projectionType,\n      f = e.projectionScale,\n      h = e.projectionTranslation,\n      p = e.projectionRotation,\n      v = e.fillColor,\n      m = e.borderWidth,\n      C = e.borderColor,\n      b = e.enableGraticule,\n      y = e.graticuleLineWidth,\n      R = e.graticuleLineColor,\n      j = e.isInteractive,\n      q = e.onClick,\n      T = e.tooltip,\n      M = e.role,\n      W = c(r, i, n),\n      w = W.margin,\n      k = W.outerWidth,\n      F = W.outerHeight,\n      O = D({\n    width: r,\n    height: i,\n    projectionType: s,\n    projectionScale: f,\n    projectionTranslation: h,\n    projectionRotation: p,\n    fillColor: v,\n    borderWidth: m,\n    borderColor: C\n  }),\n      L = O.graticule,\n      E = O.path,\n      S = O.getFillColor,\n      G = O.getBorderWidth,\n      x = O.getBorderColor,\n      B = a(),\n      P = g(),\n      H = P.showTooltipFromEvent,\n      I = P.hideTooltip,\n      z = o(function (e, r) {\n    return j && q && q(e, r);\n  }, [j, q]),\n      V = o(function (e, r) {\n    return j && T && H(N(T, {\n      feature: e\n    }), r);\n  }, [j, H, T]),\n      A = o(function (e, r) {\n    return j && T && H(N(T, {\n      feature: e\n    }), r);\n  }, [j, H, T]),\n      J = o(function () {\n    return j && I();\n  }, [j, I]);\n  return N(d, {\n    width: k,\n    height: F,\n    margin: w,\n    theme: B,\n    role: M,\n    children: l.map(function (r, o) {\n      return \"graticule\" === r ? !0 !== b ? null : N(oe, {\n        path: E,\n        graticule: L,\n        lineWidth: y,\n        lineColor: R\n      }, \"graticule\") : \"features\" === r ? N(t, {\n        children: u.map(function (e) {\n          return N(te, {\n            feature: e,\n            path: E,\n            fillColor: S(e),\n            borderWidth: G(e),\n            borderColor: x(e),\n            onMouseEnter: V,\n            onMouseMove: A,\n            onMouseLeave: J,\n            onClick: z\n          }, e.id);\n        })\n      }, \"features\") : N(t, {\n        children: r(e)\n      }, o);\n    })\n  });\n});\nie.displayName = \"GeoMap\", ie.propTypes = J, ie.defaultProps = Z;\n\nvar ne = s(ie),\n    ae = function (e) {\n  return N(f, {\n    children: function (r) {\n      var o = r.width,\n          t = r.height;\n      return N(ne, H({\n        width: o,\n        height: t\n      }, e));\n    }\n  });\n},\n    ue = function (e, r, o, t) {\n  var i = h(r, e),\n      n = i[0],\n      a = i[1];\n  return o.find(function (e) {\n    return G(e, t.invert([n, a]));\n  });\n},\n    le = r(function (e) {\n  var r = e.width,\n      t = e.height,\n      u = e.margin,\n      l = e.pixelRatio,\n      d = e.features,\n      s = e.layers,\n      f = e.projectionType,\n      h = e.projectionScale,\n      p = e.projectionTranslation,\n      v = e.projectionRotation,\n      m = e.fillColor,\n      C = e.borderWidth,\n      b = e.borderColor,\n      y = e.enableGraticule,\n      R = e.graticuleLineWidth,\n      j = e.graticuleLineColor,\n      q = e.isInteractive,\n      T = e.onClick,\n      M = e.onMouseMove,\n      W = e.tooltip,\n      w = i(null),\n      k = a(),\n      F = c(r, t, u),\n      O = F.margin,\n      L = F.outerWidth,\n      E = F.outerHeight,\n      S = D({\n    width: r,\n    height: t,\n    projectionType: f,\n    projectionScale: h,\n    projectionTranslation: p,\n    projectionRotation: v,\n    fillColor: m,\n    borderWidth: C,\n    borderColor: b\n  }),\n      G = S.projection,\n      x = S.graticule,\n      B = S.path,\n      P = S.getFillColor,\n      H = S.getBorderWidth,\n      I = S.getBorderColor;\n  n(function () {\n    if (w) {\n      w.current.width = L * l, w.current.height = E * l;\n      var r = w.current.getContext(\"2d\");\n      r.scale(l, l), r.fillStyle = k.background, r.fillRect(0, 0, L, E), r.translate(O.left, O.top), B.context(r), s.forEach(function (o) {\n        \"graticule\" === o ? !0 === y && (r.lineWidth = R, r.strokeStyle = j, r.beginPath(), B(x()), r.stroke()) : \"features\" === o ? d.forEach(function (e) {\n          r.beginPath(), B(e), r.fillStyle = P(e), r.fill();\n          var o = H(e);\n          o > 0 && (r.strokeStyle = I(e), r.lineWidth = o, r.stroke());\n        }) : o(r, e);\n      });\n    }\n  }, [w, L, E, O, l, k, B, x, P, H, I, d, s]);\n  var z = g(),\n      V = z.showTooltipFromEvent,\n      A = z.hideTooltip,\n      J = o(function (e) {\n    if (q && W) {\n      var r = ue(e, w.current, d, G);\n      r ? V(N(W, {\n        feature: r\n      }), e) : A(), M && M(r || null, e);\n    }\n  }, [V, A, q, W, w, d, G]),\n      K = o(function () {\n    return q && A();\n  }, [q, A]),\n      Q = o(function (e) {\n    if (q && T) {\n      var r = ue(e, w.current, d, G);\n      r && T(r, e);\n    }\n  }, [q, w, d, G, T]);\n  return N(\"canvas\", {\n    ref: w,\n    width: L * l,\n    height: E * l,\n    style: {\n      width: L,\n      height: E,\n      cursor: q ? \"auto\" : \"normal\"\n    },\n    onMouseMove: J,\n    onMouseLeave: K,\n    onClick: Q\n  });\n});\n\nle.displatName = \"GeoMapCanvas\", le.propTypes = K, le.defaultProps = $;\n\nvar ce = s(le),\n    de = function (e) {\n  return N(f, {\n    children: function (r) {\n      var o = r.width,\n          t = r.height;\n      return N(ce, H({\n        width: o,\n        height: t\n      }, e));\n    }\n  });\n},\n    se = r(function (e) {\n  var r = e.width,\n      i = e.height,\n      n = e.margin,\n      u = e.features,\n      l = e.data,\n      s = e.match,\n      f = e.label,\n      h = e.value,\n      p = e.valueFormat,\n      v = e.projectionType,\n      m = e.projectionScale,\n      C = e.projectionTranslation,\n      b = e.projectionRotation,\n      y = e.colors,\n      R = e.domain,\n      j = e.unknownColor,\n      q = e.borderWidth,\n      T = e.borderColor,\n      M = e.enableGraticule,\n      W = e.graticuleLineWidth,\n      w = e.graticuleLineColor,\n      k = e.layers,\n      F = e.legends,\n      O = e.isInteractive,\n      L = e.onClick,\n      E = e.tooltip,\n      S = e.role,\n      G = c(r, i, n),\n      x = G.margin,\n      P = G.outerWidth,\n      I = G.outerHeight,\n      V = D({\n    width: r,\n    height: i,\n    projectionType: v,\n    projectionScale: m,\n    projectionTranslation: C,\n    projectionRotation: b,\n    fillColor: function () {},\n    borderWidth: q,\n    borderColor: T\n  }),\n      A = V.graticule,\n      J = V.path,\n      K = V.getBorderWidth,\n      Q = V.getBorderColor,\n      U = z({\n    features: u,\n    data: l,\n    match: s,\n    label: f,\n    value: h,\n    valueFormat: p,\n    colors: y,\n    unknownColor: j,\n    domain: R\n  }),\n      X = U.getFillColor,\n      Y = U.boundFeatures,\n      Z = U.legendData,\n      $ = a(),\n      _ = g(),\n      ee = _.showTooltipFromEvent,\n      re = _.hideTooltip,\n      ie = o(function (e, r) {\n    return O && L && L(e, r);\n  }, [O, L]),\n      ne = o(function (e, r) {\n    return O && E && ee(N(E, {\n      feature: e\n    }), r);\n  }, [O, ee, E]),\n      ae = o(function (e, r) {\n    return O && E && ee(N(E, {\n      feature: e\n    }), r);\n  }, [O, ee, E]),\n      ue = o(function () {\n    return O && re();\n  }, [O, re]);\n\n  return N(d, {\n    width: P,\n    height: I,\n    margin: x,\n    theme: $,\n    role: S,\n    children: k.map(function (e, o) {\n      return \"graticule\" === e ? !0 !== M ? null : N(oe, {\n        path: J,\n        graticule: A,\n        lineWidth: W,\n        lineColor: w\n      }, \"graticule\") : \"features\" === e ? N(t, {\n        children: Y.map(function (e) {\n          return N(te, {\n            feature: e,\n            path: J,\n            fillColor: X(e),\n            borderWidth: K(e),\n            borderColor: Q(e),\n            onMouseEnter: ne,\n            onMouseMove: ae,\n            onMouseLeave: ue,\n            onClick: ie\n          }, e.id);\n        })\n      }, \"features\") : \"legends\" === e ? F.map(function (e, o) {\n        return N(B, H({\n          containerWidth: r,\n          containerHeight: i,\n          data: Z\n        }, e), o);\n      }) : N(t, {\n        children: e({})\n      }, o);\n    })\n  });\n});\n\nse.displayName = \"Choropleth\", se.propTypes = U, se.defaultProps = ee;\n\nvar fe = s(se),\n    he = function (e) {\n  return N(f, {\n    children: function (r) {\n      var o = r.width,\n          t = r.height;\n      return N(fe, H({\n        width: o,\n        height: t\n      }, e));\n    }\n  });\n},\n    pe = function (e, r, o, t) {\n  var i = h(r, e),\n      n = i[0],\n      a = i[1];\n  return o.find(function (e) {\n    return G(e, t.invert([n, a]));\n  });\n},\n    ge = r(function (e) {\n  var r = e.width,\n      t = e.height,\n      u = e.margin,\n      l = e.pixelRatio,\n      d = e.features,\n      s = e.data,\n      f = e.match,\n      h = e.label,\n      p = e.value,\n      v = e.valueFormat,\n      m = e.projectionType,\n      C = e.projectionScale,\n      b = e.projectionTranslation,\n      y = e.projectionRotation,\n      R = e.colors,\n      j = e.domain,\n      q = e.unknownColor,\n      T = e.borderWidth,\n      M = e.borderColor,\n      W = e.enableGraticule,\n      w = e.graticuleLineWidth,\n      k = e.graticuleLineColor,\n      F = e.layers,\n      O = e.legends,\n      L = e.isInteractive,\n      E = e.onClick,\n      S = e.onMouseMove,\n      G = e.tooltip,\n      x = i(null),\n      B = a(),\n      I = c(r, t, u),\n      V = I.margin,\n      A = I.outerWidth,\n      J = I.outerHeight,\n      K = D({\n    width: r,\n    height: t,\n    projectionType: m,\n    projectionScale: C,\n    projectionTranslation: b,\n    projectionRotation: y,\n    fillColor: function () {},\n    borderWidth: T,\n    borderColor: M\n  }),\n      Q = K.projection,\n      U = K.graticule,\n      X = K.path,\n      Y = K.getBorderWidth,\n      Z = K.getBorderColor,\n      $ = z({\n    features: d,\n    data: s,\n    match: f,\n    label: h,\n    value: p,\n    valueFormat: v,\n    colors: R,\n    unknownColor: q,\n    domain: j\n  }),\n      _ = $.getFillColor,\n      ee = $.boundFeatures,\n      re = $.legendData;\n  n(function () {\n    if (x) {\n      x.current.width = A * l, x.current.height = J * l;\n      var e = x.current.getContext(\"2d\");\n      e.scale(l, l), e.fillStyle = B.background, e.fillRect(0, 0, A, J), e.translate(V.left, V.top), X.context(e), F.forEach(function (o) {\n        \"graticule\" === o ? !0 === W && (e.lineWidth = w, e.strokeStyle = k, e.beginPath(), X(U()), e.stroke()) : \"features\" === o ? ee.forEach(function (r) {\n          e.beginPath(), X(r), e.fillStyle = _(r), e.fill();\n          var o = Y(r);\n          o > 0 && (e.strokeStyle = Z(r), e.lineWidth = o, e.stroke());\n        }) : \"legends\" === o && O.forEach(function (o) {\n          P(e, H({}, o, {\n            data: re,\n            containerWidth: r,\n            containerHeight: t,\n            theme: B\n          }));\n        });\n      });\n    }\n  }, [x, A, J, V, l, B, X, U, _, Y, Z, ee, O, F]);\n  var oe = g(),\n      te = oe.showTooltipFromEvent,\n      ie = oe.hideTooltip,\n      ne = o(function (e) {\n    if (L && G) {\n      var r = pe(e, x.current, ee, Q);\n      r ? te(N(G, {\n        feature: r\n      }), e) : ie(), S && S(r || null, e);\n    }\n  }, [te, ie, L, G, x, ee, Q]),\n      ae = o(function () {\n    return L && ie();\n  }, [L, ie]),\n      ue = o(function (e) {\n    if (L && E) {\n      var r = pe(e, x.current, ee, Q);\n      r && E(r, e);\n    }\n  }, [L, x, ee, Q, E]);\n  return N(\"canvas\", {\n    ref: x,\n    width: A * l,\n    height: J * l,\n    style: {\n      width: A,\n      height: J,\n      cursor: L ? \"auto\" : \"normal\"\n    },\n    onMouseMove: ne,\n    onMouseLeave: ae,\n    onClick: ue\n  });\n});\n\nge.displayName = \"ChoroplethCanvas\", ge.propTypes = X, ge.defaultProps = re;\n\nvar ve = s(ge),\n    me = function (e) {\n  return N(f, {\n    children: function (r) {\n      var o = r.width,\n          t = r.height;\n      return N(ve, H({\n        width: o,\n        height: t\n      }, e));\n    }\n  });\n};\n\nexport { fe as Choropleth, ve as ChoroplethCanvas, re as ChoroplethCanvasDefaultProps, X as ChoroplethCanvasPropTypes, ee as ChoroplethDefaultProps, U as ChoroplethPropTypes, ne as GeoMap, ce as GeoMapCanvas, $ as GeoMapCanvasDefaultProps, K as GeoMapCanvasPropTypes, Z as GeoMapDefaultProps, J as GeoMapPropTypes, he as ResponsiveChoropleth, me as ResponsiveChoroplethCanvas, ae as ResponsiveGeoMap, de as ResponsiveGeoMapCanvas, I as projectionById, z as useChoropleth, D as useGeoMap };","map":{"version":3,"mappings":"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","names":["projectionById","azimuthalEqualArea","geoAzimuthalEqualArea","azimuthalEquidistant","geoAzimuthalEquidistant","gnomonic","geoGnomonic","orthographic","geoOrthographic","stereographic","geoStereographic","equalEarth","geoEqualEarth","equirectangular","geoEquirectangular","mercator","geoMercator","transverseMercator","geoTransverseMercator","naturalEarth1","geoNaturalEarth1","useGeoMap","width","height","projectionType","projectionScale","projectionTranslation","projectionRotation","fillColor","borderWidth","borderColor","projection","useMemo","scale","translate","rotate","path","geoPath","graticule","geoGraticule","theme","useTheme","getBorderWidth","getBorderColor","useInheritedColor","getFillColor","useChoropleth","features","data","match","label","value","valueFormat","colors","unknownColor","domain","findMatchingDatum","_isFunction","feature","datum","featureKey","_get","datumKey","getLabel","getValue","valueFormatter","undefined","d","format","colorScale","guessQuantizeColorScale","boundFeatures","map","find","datumValue","featureWithData","formattedValue","color","legendData","useQuantizeColorScaleLegendData","ChoroplethTooltip","memo","_jsx","BasicTooltip","id","enableChip","propTypes","PropTypes","object","isRequired","displayName","commonPropTypes","arrayOf","shape","string","type","oneOf","properties","geometry","Object","keys","number","oneOfType","func","inheritedColorPropType","enableGraticule","bool","graticuleLineWidth","graticuleLineColor","isInteractive","onMouseEnter","onMouseMove","onMouseLeave","onClick","tooltip","any","layers","GeoMapPropTypes","role","GeoMapCanvasPropTypes","pixelRatio","commonChoroplethPropTypes","quantizeColorScalePropType","ChoroplethPropTypes","ChoroplethCanvasPropTypes","commonDefaultProps","legends","GeoMapDefaultProps","GeoMapCanvasDefaultProps","window","devicePixelRatio","commonChoroplethDefaultProps","ChoroplethDefaultProps","ChoroplethCanvasDefaultProps","GeoGraticule","lineWidth","lineColor","fill","strokeWidth","stroke","GeoMapFeature","strokeLinejoin","event","GeoMap","props","partialMargin","margin","Tooltip","useDimensions","outerWidth","outerHeight","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","useCallback","handleMouseEnter","handleMouseMove","handleMouseLeave","SvgWrapper","layer","i","Fragment","defaultProps","withContainer","ResponsiveGeoMap","ResponsiveWrapper","getFeatureFromMouseEvent","el","getRelativeCursor","x","y","f","geoContains","invert","GeoMapCanvas","canvasEl","useRef","useEffect","current","ctx","getContext","fillStyle","background","fillRect","left","top","context","forEach","strokeStyle","beginPath","ref","style","cursor","displatName","ResponsiveGeoMapCanvas","Choropleth","legend","BoxLegendSvg","containerWidth","containerHeight","ResponsiveChoropleth","ChoroplethCanvas","renderLegendToCanvas","ResponsiveChoroplethCanvas"],"sources":["/Users/katherinegraessle/workspace/qua-foodies/CODE/node_modules/@nivo/geo/src/hooks.js","/Users/katherinegraessle/workspace/qua-foodies/CODE/node_modules/@nivo/geo/src/ChoroplethTooltip.js","/Users/katherinegraessle/workspace/qua-foodies/CODE/node_modules/@nivo/geo/src/props.js","/Users/katherinegraessle/workspace/qua-foodies/CODE/node_modules/@nivo/geo/src/GeoGraticule.js","/Users/katherinegraessle/workspace/qua-foodies/CODE/node_modules/@nivo/geo/src/GeoMapFeature.js","/Users/katherinegraessle/workspace/qua-foodies/CODE/node_modules/@nivo/geo/src/GeoMap.js","/Users/katherinegraessle/workspace/qua-foodies/CODE/node_modules/@nivo/geo/src/ResponsiveGeoMap.js","/Users/katherinegraessle/workspace/qua-foodies/CODE/node_modules/@nivo/geo/src/GeoMapCanvas.js","/Users/katherinegraessle/workspace/qua-foodies/CODE/node_modules/@nivo/geo/src/ResponsiveGeoMapCanvas.js","/Users/katherinegraessle/workspace/qua-foodies/CODE/node_modules/@nivo/geo/src/Choropleth.js","/Users/katherinegraessle/workspace/qua-foodies/CODE/node_modules/@nivo/geo/src/ResponsiveChoropleth.js","/Users/katherinegraessle/workspace/qua-foodies/CODE/node_modules/@nivo/geo/src/ChoroplethCanvas.js","/Users/katherinegraessle/workspace/qua-foodies/CODE/node_modules/@nivo/geo/src/ResponsiveChoroplethCanvas.js"],"sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport { isFunction, get } from 'lodash'\nimport { format } from 'd3-format'\nimport {\n    geoPath,\n    geoAzimuthalEqualArea,\n    geoAzimuthalEquidistant,\n    geoGnomonic,\n    geoOrthographic,\n    geoStereographic,\n    geoEqualEarth,\n    geoEquirectangular,\n    geoMercator,\n    geoTransverseMercator,\n    geoNaturalEarth1,\n    geoGraticule,\n} from 'd3-geo'\nimport { guessQuantizeColorScale, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useQuantizeColorScaleLegendData } from '@nivo/legends'\n\nexport const projectionById = {\n    azimuthalEqualArea: geoAzimuthalEqualArea,\n    azimuthalEquidistant: geoAzimuthalEquidistant,\n    gnomonic: geoGnomonic,\n    orthographic: geoOrthographic,\n    stereographic: geoStereographic,\n    equalEarth: geoEqualEarth,\n    equirectangular: geoEquirectangular,\n    mercator: geoMercator,\n    transverseMercator: geoTransverseMercator,\n    naturalEarth1: geoNaturalEarth1,\n}\n\nexport const useGeoMap = ({\n    width,\n    height,\n    projectionType,\n    projectionScale,\n    projectionTranslation,\n    projectionRotation,\n    fillColor,\n    borderWidth,\n    borderColor,\n}) => {\n    const projection = useMemo(() => {\n        return projectionById[projectionType]()\n            .scale(projectionScale)\n            .translate([width * projectionTranslation[0], height * projectionTranslation[1]])\n            .rotate(projectionRotation)\n    }, [\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation[0],\n        projectionTranslation[1],\n        projectionRotation[0],\n        projectionRotation[1],\n        projectionRotation[2],\n    ])\n    const path = useMemo(() => geoPath(projection), [projection])\n    const graticule = useMemo(() => geoGraticule())\n\n    const theme = useTheme()\n    const getBorderWidth = useMemo(\n        () => (typeof borderWidth === 'function' ? borderWidth : () => borderWidth),\n        [borderWidth]\n    )\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getFillColor = useMemo(\n        () => (typeof fillColor === 'function' ? fillColor : () => fillColor),\n        [fillColor]\n    )\n\n    return {\n        projection,\n        path,\n        graticule,\n        getBorderWidth,\n        getBorderColor,\n        getFillColor,\n    }\n}\n\nexport const useChoropleth = ({\n    features,\n    data,\n    match,\n    label,\n    value,\n    valueFormat,\n    colors,\n    unknownColor,\n    domain,\n}) => {\n    const findMatchingDatum = useMemo(() => {\n        if (isFunction(match)) return match\n        return (feature, datum) => {\n            const featureKey = get(feature, match)\n            const datumKey = get(datum, match)\n\n            return featureKey && featureKey === datumKey\n        }\n    }, [match])\n    const getLabel = useMemo(\n        () => (isFunction(label) ? label : datum => get(datum, label)),\n        [label]\n    )\n    const getValue = useMemo(\n        () => (isFunction(value) ? value : datum => get(datum, value)),\n        [value]\n    )\n    const valueFormatter = useMemo(() => {\n        if (valueFormat === undefined) return d => d\n        if (isFunction(valueFormat)) return valueFormat\n        return format(valueFormat)\n    }, [valueFormat])\n\n    const colorScale = useMemo(\n        () => guessQuantizeColorScale(colors).domain(domain),\n        [colors, domain]\n    )\n    const getFillColor = useMemo(() => {\n        return feature => {\n            if (feature.value === undefined) return unknownColor\n            return colorScale(feature.value)\n        }\n    }, [colorScale, unknownColor])\n\n    const boundFeatures = useMemo(\n        () =>\n            features.map(feature => {\n                const datum = data.find(datum => findMatchingDatum(feature, datum))\n                const datumValue = getValue(datum)\n\n                if (datum) {\n                    const featureWithData = {\n                        ...feature,\n                        data: datum,\n                        value: datumValue,\n                        formattedValue: valueFormatter(datumValue),\n                    }\n                    featureWithData.color = getFillColor(featureWithData)\n                    featureWithData.label = getLabel(featureWithData)\n\n                    return featureWithData\n                }\n\n                return feature\n            }),\n        [features, data, findMatchingDatum, getValue, valueFormatter, getFillColor]\n    )\n\n    const legendData = useQuantizeColorScaleLegendData({\n        scale: colorScale,\n        valueFormat: valueFormatter,\n    })\n\n    return {\n        colorScale,\n        getFillColor,\n        boundFeatures,\n        valueFormatter,\n        legendData,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst ChoroplethTooltip = memo(({ feature }) => {\n    if (feature.data === undefined) return null\n\n    return (\n        <BasicTooltip\n            id={feature.label}\n            color={feature.color}\n            enableChip={true}\n            value={feature.formattedValue}\n        />\n    )\n})\n\nChoroplethTooltip.propTypes = {\n    feature: PropTypes.object.isRequired,\n}\n\nChoroplethTooltip.displayName = 'ChoroplethTooltip'\n\nexport default ChoroplethTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { quantizeColorScalePropType } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { projectionById } from './hooks'\nimport ChoroplethTooltip from './ChoroplethTooltip'\n\nconst commonPropTypes = {\n    features: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.oneOf(['Feature']).isRequired,\n            properties: PropTypes.object,\n            geometry: PropTypes.object.isRequired,\n        })\n    ).isRequired,\n\n    projectionType: PropTypes.oneOf(Object.keys(projectionById)).isRequired,\n    projectionScale: PropTypes.number.isRequired,\n    projectionTranslation: PropTypes.arrayOf(PropTypes.number).isRequired,\n    projectionRotation: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    fillColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    borderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    enableGraticule: PropTypes.bool.isRequired,\n    graticuleLineWidth: PropTypes.number.isRequired,\n    graticuleLineColor: PropTypes.string.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltip: PropTypes.any,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const GeoMapPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const GeoMapCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonChoroplethPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    match: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    valueFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    colors: quantizeColorScalePropType.isRequired,\n    domain: PropTypes.arrayOf(PropTypes.number).isRequired,\n    unknownColor: PropTypes.string.isRequired,\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features', 'legends']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const ChoroplethPropTypes = {\n    ...GeoMapPropTypes,\n    ...commonChoroplethPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const ChoroplethCanvasPropTypes = {\n    ...GeoMapCanvasPropTypes,\n    ...commonChoroplethPropTypes,\n}\n\nconst commonDefaultProps = {\n    projectionType: 'mercator',\n    projectionScale: 100,\n    projectionTranslation: [0.5, 0.5],\n    projectionRotation: [0, 0, 0],\n\n    enableGraticule: false,\n    graticuleLineWidth: 0.5,\n    graticuleLineColor: '#999999',\n\n    fillColor: '#dddddd',\n    borderWidth: 0,\n    borderColor: '#000000',\n\n    isInteractive: true,\n    onMouseEnter: () => {},\n    onMouseLeave: () => {},\n    onMouseMove: () => {},\n    onClick: () => {},\n\n    layers: ['graticule', 'features'],\n    legends: [],\n}\n\nexport const GeoMapDefaultProps = {\n    ...commonDefaultProps,\n    role: 'img',\n}\n\nexport const GeoMapCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n\nconst commonChoroplethDefaultProps = {\n    match: 'id',\n    label: 'id',\n    value: 'value',\n    colors: 'PuBuGn',\n    unknownColor: '#999',\n    tooltip: ChoroplethTooltip,\n    layers: ['graticule', 'features', 'legends'],\n}\n\nexport const ChoroplethDefaultProps = {\n    ...GeoMapDefaultProps,\n    ...commonChoroplethDefaultProps,\n    role: 'img',\n}\n\nexport const ChoroplethCanvasDefaultProps = {\n    ...GeoMapCanvasDefaultProps,\n    ...commonChoroplethDefaultProps,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoGraticule = memo(({ path, graticule, lineWidth, lineColor }) => {\n    return <path fill=\"none\" strokeWidth={lineWidth} stroke={lineColor} d={path(graticule())} />\n})\n\nGeoGraticule.propTypes = {\n    path: PropTypes.func.isRequired,\n    graticule: PropTypes.func.isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineColor: PropTypes.string.isRequired,\n}\n\nGeoGraticule.displayName = 'GeoGraticule'\n\nexport default GeoGraticule\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoMapFeature = memo(\n    ({\n        feature,\n        path,\n        fillColor,\n        borderWidth,\n        borderColor,\n        onClick,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n    }) => {\n        return (\n            <path\n                key={feature.id}\n                fill={fillColor}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                strokeLinejoin=\"bevel\"\n                d={path(feature)}\n                onMouseEnter={event => onMouseEnter(feature, event)}\n                onMouseMove={event => onMouseMove(feature, event)}\n                onMouseLeave={event => onMouseLeave(feature, event)}\n                onClick={event => onClick(feature, event)}\n            />\n        )\n    }\n)\n\nGeoMapFeature.propTypes = {\n    feature: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.oneOf(['Feature']).isRequired,\n        properties: PropTypes.object,\n        geometry: PropTypes.object.isRequired,\n    }).isRequired,\n    path: PropTypes.func.isRequired,\n\n    fillColor: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nGeoMapFeature.displayName = 'GeoMapFeature'\n\nexport default GeoMapFeature\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Fragment, useCallback, memo } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapPropTypes, GeoMapDefaultProps } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap } from './hooks'\n\nconst GeoMap = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        layers,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        isInteractive,\n        onClick,\n        tooltip: Tooltip,\n        role,\n    } = props\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap({\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n    })\n\n    const theme = useTheme()\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleClick = useCallback(\n        (feature, event) => isInteractive && onClick && onClick(feature, event),\n        [isInteractive, onClick]\n    )\n    const handleMouseEnter = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseMove = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseLeave = useCallback(\n        () => isInteractive && hideTooltip(),\n        [isInteractive, hideTooltip]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            theme={theme}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layer === 'graticule') {\n                    if (enableGraticule !== true) return null\n\n                    return (\n                        <GeoGraticule\n                            key=\"graticule\"\n                            path={path}\n                            graticule={graticule}\n                            lineWidth={graticuleLineWidth}\n                            lineColor={graticuleLineColor}\n                        />\n                    )\n                }\n                if (layer === 'features') {\n                    return (\n                        <Fragment key=\"features\">\n                            {features.map(feature => (\n                                <GeoMapFeature\n                                    key={feature.id}\n                                    feature={feature}\n                                    path={path}\n                                    fillColor={getFillColor(feature)}\n                                    borderWidth={getBorderWidth(feature)}\n                                    borderColor={getBorderColor(feature)}\n                                    onMouseEnter={handleMouseEnter}\n                                    onMouseMove={handleMouseMove}\n                                    onMouseLeave={handleMouseLeave}\n                                    onClick={handleClick}\n                                />\n                            ))}\n                        </Fragment>\n                    )\n                }\n\n                return <Fragment key={i}>{layer(props)}</Fragment>\n            })}\n        </SvgWrapper>\n    )\n})\n\nGeoMap.displayName = 'GeoMap'\nGeoMap.propTypes = GeoMapPropTypes\nGeoMap.defaultProps = GeoMapDefaultProps\n\nexport default withContainer(GeoMap)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMap from './GeoMap'\n\nconst ResponsiveGeoMap = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMap width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMap\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapCanvasDefaultProps, GeoMapCanvasPropTypes } from './props'\nimport { useGeoMap } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst GeoMapCanvas = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n        features,\n        layers,\n\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n\n        fillColor,\n        borderWidth,\n        borderColor,\n\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n\n        isInteractive,\n        onClick,\n        onMouseMove,\n        tooltip: Tooltip,\n    } = props\n\n    const canvasEl = useRef(null)\n    const theme = useTheme()\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { projection, graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap(\n        {\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor,\n            borderWidth,\n            borderColor,\n        }\n    )\n\n    useEffect(() => {\n        if (!canvasEl) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        path.context(ctx)\n\n        layers.forEach(layer => {\n            if (layer === 'graticule') {\n                if (enableGraticule === true) {\n                    ctx.lineWidth = graticuleLineWidth\n                    ctx.strokeStyle = graticuleLineColor\n                    ctx.beginPath()\n                    path(graticule())\n                    ctx.stroke()\n                }\n            } else if (layer === 'features') {\n                features.forEach(feature => {\n                    ctx.beginPath()\n                    path(feature)\n                    ctx.fillStyle = getFillColor(feature)\n                    ctx.fill()\n\n                    const borderWidth = getBorderWidth(feature)\n                    if (borderWidth > 0) {\n                        ctx.strokeStyle = getBorderColor(feature)\n                        ctx.lineWidth = borderWidth\n                        ctx.stroke()\n                    }\n                })\n            } else {\n                layer(ctx, props)\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        margin,\n        pixelRatio,\n        theme,\n        path,\n        graticule,\n        getFillColor,\n        getBorderWidth,\n        getBorderColor,\n        features,\n        layers,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseMove = useCallback(\n        event => {\n            if (!isInteractive || !Tooltip) return\n\n            const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n            if (feature) {\n                showTooltipFromEvent(<Tooltip feature={feature} />, event)\n            } else {\n                hideTooltip()\n            }\n            onMouseMove && onMouseMove(feature || null, event)\n        },\n        [showTooltipFromEvent, hideTooltip, isInteractive, Tooltip, canvasEl, features, projection]\n    )\n    const handleMouseLeave = useCallback(\n        () => isInteractive && hideTooltip(),\n        [isInteractive, hideTooltip]\n    )\n    const handleClick = useCallback(\n        event => {\n            if (!isInteractive || !onClick) return\n\n            const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n            if (feature) {\n                onClick(feature, event)\n            }\n        },\n        [isInteractive, canvasEl, features, projection, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n        />\n    )\n})\n\nGeoMapCanvas.displatName = 'GeoMapCanvas'\nGeoMapCanvas.propTypes = GeoMapCanvasPropTypes\nGeoMapCanvas.defaultProps = GeoMapCanvasDefaultProps\n\nexport default withContainer(GeoMapCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMapCanvas from './GeoMapCanvas'\n\nconst ResponsiveGeoMapCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMapCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMapCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, Fragment, useCallback } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethPropTypes, ChoroplethDefaultProps } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap, useChoropleth } from './hooks'\n\nconst Choropleth = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        colors,\n        domain,\n        unknownColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        layers,\n        legends,\n        isInteractive,\n        onClick,\n        tooltip: Tooltip,\n        role,\n    }) => {\n        const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n        const { graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor: () => {},\n            borderWidth,\n            borderColor,\n        })\n        const { getFillColor, boundFeatures, legendData } = useChoropleth({\n            features,\n            data,\n            match,\n            label,\n            value,\n            valueFormat,\n            colors,\n            unknownColor,\n            domain,\n        })\n\n        const theme = useTheme()\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const handleClick = useCallback(\n            (feature, event) => isInteractive && onClick && onClick(feature, event),\n            [isInteractive, onClick]\n        )\n        const handleMouseEnter = useCallback(\n            (feature, event) =>\n                isInteractive &&\n                Tooltip &&\n                showTooltipFromEvent(<Tooltip feature={feature} />, event),\n            [isInteractive, showTooltipFromEvent, Tooltip]\n        )\n        const handleMouseMove = useCallback(\n            (feature, event) =>\n                isInteractive &&\n                Tooltip &&\n                showTooltipFromEvent(<Tooltip feature={feature} />, event),\n            [isInteractive, showTooltipFromEvent, Tooltip]\n        )\n        const handleMouseLeave = useCallback(\n            () => isInteractive && hideTooltip(),\n            [isInteractive, hideTooltip]\n        )\n\n        return (\n            <SvgWrapper\n                width={outerWidth}\n                height={outerHeight}\n                margin={margin}\n                theme={theme}\n                role={role}\n            >\n                {layers.map((layer, i) => {\n                    if (layer === 'graticule') {\n                        if (enableGraticule !== true) return null\n\n                        return (\n                            <GeoGraticule\n                                key=\"graticule\"\n                                path={path}\n                                graticule={graticule}\n                                lineWidth={graticuleLineWidth}\n                                lineColor={graticuleLineColor}\n                            />\n                        )\n                    }\n                    if (layer === 'features') {\n                        return (\n                            <Fragment key=\"features\">\n                                {boundFeatures.map(feature => (\n                                    <GeoMapFeature\n                                        key={feature.id}\n                                        feature={feature}\n                                        path={path}\n                                        fillColor={getFillColor(feature)}\n                                        borderWidth={getBorderWidth(feature)}\n                                        borderColor={getBorderColor(feature)}\n                                        onMouseEnter={handleMouseEnter}\n                                        onMouseMove={handleMouseMove}\n                                        onMouseLeave={handleMouseLeave}\n                                        onClick={handleClick}\n                                    />\n                                ))}\n                            </Fragment>\n                        )\n                    }\n                    if (layer === 'legends') {\n                        return legends.map((legend, i) => {\n                            return (\n                                <BoxLegendSvg\n                                    key={i}\n                                    containerWidth={width}\n                                    containerHeight={height}\n                                    data={legendData}\n                                    {...legend}\n                                />\n                            )\n                        })\n                    }\n\n                    return <Fragment key={i}>{layer({})}</Fragment>\n                })}\n            </SvgWrapper>\n        )\n    }\n)\n\nChoropleth.displayName = 'Choropleth'\nChoropleth.propTypes = ChoroplethPropTypes\nChoropleth.defaultProps = ChoroplethDefaultProps\n\nexport default withContainer(Choropleth)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Choropleth from './Choropleth'\n\nconst ResponsiveChoropleth = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Choropleth width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoropleth\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethCanvasDefaultProps, ChoroplethCanvasPropTypes } from './props'\nimport { useGeoMap, useChoropleth } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst ChoroplethCanvas = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        colors,\n        domain,\n        unknownColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        layers,\n        legends,\n        isInteractive,\n        onClick,\n        onMouseMove,\n        tooltip: Tooltip,\n    }) => {\n        const canvasEl = useRef(null)\n        const theme = useTheme()\n        const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n        const { projection, graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor: () => {},\n            borderWidth,\n            borderColor,\n        })\n        const { getFillColor, boundFeatures, legendData } = useChoropleth({\n            features,\n            data,\n            match,\n            label,\n            value,\n            valueFormat,\n            colors,\n            unknownColor,\n            domain,\n        })\n\n        useEffect(() => {\n            if (!canvasEl) return\n\n            canvasEl.current.width = outerWidth * pixelRatio\n            canvasEl.current.height = outerHeight * pixelRatio\n\n            const ctx = canvasEl.current.getContext('2d')\n\n            ctx.scale(pixelRatio, pixelRatio)\n\n            ctx.fillStyle = theme.background\n            ctx.fillRect(0, 0, outerWidth, outerHeight)\n            ctx.translate(margin.left, margin.top)\n\n            path.context(ctx)\n\n            layers.forEach(layer => {\n                if (layer === 'graticule') {\n                    if (enableGraticule === true) {\n                        ctx.lineWidth = graticuleLineWidth\n                        ctx.strokeStyle = graticuleLineColor\n                        ctx.beginPath()\n                        path(graticule())\n                        ctx.stroke()\n                    }\n                } else if (layer === 'features') {\n                    boundFeatures.forEach(feature => {\n                        ctx.beginPath()\n                        path(feature)\n                        ctx.fillStyle = getFillColor(feature)\n                        ctx.fill()\n\n                        const borderWidth = getBorderWidth(feature)\n                        if (borderWidth > 0) {\n                            ctx.strokeStyle = getBorderColor(feature)\n                            ctx.lineWidth = borderWidth\n                            ctx.stroke()\n                        }\n                    })\n                } else if (layer === 'legends') {\n                    legends.forEach(legend => {\n                        renderLegendToCanvas(ctx, {\n                            ...legend,\n                            data: legendData,\n                            containerWidth: width,\n                            containerHeight: height,\n                            theme,\n                        })\n                    })\n                } else {\n                    // layer(ctx, {})\n                }\n            })\n        }, [\n            canvasEl,\n            outerWidth,\n            outerHeight,\n            margin,\n            pixelRatio,\n            theme,\n            path,\n            graticule,\n            getFillColor,\n            getBorderWidth,\n            getBorderColor,\n            boundFeatures,\n            legends,\n            layers,\n        ])\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const handleMouseMove = useCallback(\n            event => {\n                if (!isInteractive || !Tooltip) return\n\n                const feature = getFeatureFromMouseEvent(\n                    event,\n                    canvasEl.current,\n                    boundFeatures,\n                    projection\n                )\n                if (feature) {\n                    showTooltipFromEvent(<Tooltip feature={feature} />, event)\n                } else {\n                    hideTooltip()\n                }\n                onMouseMove && onMouseMove(feature || null, event)\n            },\n            [\n                showTooltipFromEvent,\n                hideTooltip,\n                isInteractive,\n                Tooltip,\n                canvasEl,\n                boundFeatures,\n                projection,\n            ]\n        )\n        const handleMouseLeave = useCallback(\n            () => isInteractive && hideTooltip(),\n            [isInteractive, hideTooltip]\n        )\n        const handleClick = useCallback(\n            event => {\n                if (!isInteractive || !onClick) return\n\n                const feature = getFeatureFromMouseEvent(\n                    event,\n                    canvasEl.current,\n                    boundFeatures,\n                    projection\n                )\n                if (feature) {\n                    onClick(feature, event)\n                }\n            },\n            [isInteractive, canvasEl, boundFeatures, projection, onClick]\n        )\n\n        return (\n            <canvas\n                ref={canvasEl}\n                width={outerWidth * pixelRatio}\n                height={outerHeight * pixelRatio}\n                style={{\n                    width: outerWidth,\n                    height: outerHeight,\n                    cursor: isInteractive ? 'auto' : 'normal',\n                }}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        )\n    }\n)\n\nChoroplethCanvas.displayName = 'ChoroplethCanvas'\nChoroplethCanvas.propTypes = ChoroplethCanvasPropTypes\nChoroplethCanvas.defaultProps = ChoroplethCanvasDefaultProps\n\nexport default withContainer(ChoroplethCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ChoroplethCanvas from './ChoroplethCanvas'\n\nconst ResponsiveChoroplethCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ChoroplethCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoroplethCanvas\n"]},"metadata":{},"sourceType":"module"}