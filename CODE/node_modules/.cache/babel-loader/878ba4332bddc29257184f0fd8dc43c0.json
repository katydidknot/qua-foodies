{"ast":null,"code":"var _jsxFileName = \"/Users/katherinegraessle/workspace/qua-foodies/CODE/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Checkbox, Divider, FormControl, FormControlLabel, FormGroup, Grid, Toolbar, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Choropleth } from \"./Choropleth\";\nimport { FeatureCollection } from \"./us-states\";\nimport Papa from \"papaparse\";\nimport { PredictionMessage } from \"./Components/PredictionMessage\";\nimport axios from \"axios\";\nimport { Features } from \"./Features\";\nimport StyledTextField from \"./Components/StyledTextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [openingData, setOpeningData] = useState(null);\n  const [openingHeatMapData, setOpeningHeatmapData] = useState(null);\n  const [zipCode, setZipCode] = useState(\"\");\n  const [zipCodeError, setZipCodeError] = useState(\"\");\n  const [closingData, setClosingData] = useState(null);\n  const [showPrediction, setShowPrediction] = useState(false);\n  const [predictionRequest, setPredictionRequest] = useState({\n    zipCode: \"\",\n    pickup: 0,\n    delivery: 0,\n    reservations: 0,\n    hotDogs: 0,\n    pizza: 0,\n    traditionalAmerican: 0,\n    sandwiches: 0,\n    burgers: 0,\n    coffee: 0,\n    mexican: 0,\n    brunch: 0,\n    newAmerican: 0,\n    italian: 0,\n    chinese: 0,\n    bar: 0,\n    chickenWings: 0,\n    iceCream: 0,\n    seafood: 0,\n    bakery: 0,\n    salad: 0,\n    desserts: 0,\n    delis: 0,\n    japanese: 0,\n    bbq: 0,\n    juiceBar: 0,\n    cafe: 0,\n    mediterranean: 0,\n    steak: 0,\n    asianFusion: 0,\n    vegetarian: 0,\n    vegan: 0\n  });\n\n  const getPrediction = async () => {\n    predictionRequest.zipCode = zipCode;\n    const response = await axios.post(\"http://127.0.0.1:5000/api\", predictionRequest, {\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    });\n    setShowPrediction(true);\n  };\n\n  useEffect(() => {\n    Papa.parse('yelp_data_final.csv', {\n      header: true,\n      download: true,\n      dynamicTyping: true,\n      complete: function (results) {\n        var _FeatureCollection$fe, _FeatureCollection$fe2, _FeatureCollection$fe3;\n\n        console.log(results.data[0]);\n        setOpeningData([...(FeatureCollection === null || FeatureCollection === void 0 ? void 0 : (_FeatureCollection$fe = FeatureCollection.features) === null || _FeatureCollection$fe === void 0 ? void 0 : _FeatureCollection$fe.map(i => {\n          var _results$data;\n\n          const value = (_results$data = results.data) === null || _results$data === void 0 ? void 0 : _results$data.filter(s => {\n            const csvRow = s;\n            return csvRow.isClosed === 0 && csvRow.state.trim() === i.properties.abbr.trim();\n          }).length; // console.log(\"STATE\", i.properties.name, \"HAS \", value, \"OPENINGS\")\n\n          return {\n            \"id\": i.id,\n            \"value\": value\n          };\n        }))]);\n        setOpeningHeatmapData([...(FeatureCollection === null || FeatureCollection === void 0 ? void 0 : (_FeatureCollection$fe2 = FeatureCollection.features) === null || _FeatureCollection$fe2 === void 0 ? void 0 : _FeatureCollection$fe2.map(i => {\n          var _results$data2, _results$data3;\n\n          const value = (_results$data2 = results.data) === null || _results$data2 === void 0 ? void 0 : _results$data2.filter(s => {\n            const csvRow = s;\n            return csvRow.isClosed === 0 && csvRow.state.trim() === i.properties.abbr.trim();\n          }).length;\n          const value2 = (_results$data3 = results.data) === null || _results$data3 === void 0 ? void 0 : _results$data3.filter(s => {\n            const csvRow = s;\n            return csvRow.isClosed === 1 && csvRow.state.trim() === i.properties.abbr.trim();\n          }).length; // console.log(\"STATE\", i.properties.name, \"HAS \", value, \"OPENINGS\")\n\n          return {\n            \"id\": i.id,\n            \"state\": i.properties.abbr,\n            \"Open\": value,\n            \"Closed\": value2\n          };\n        }))]);\n        setClosingData([...(FeatureCollection === null || FeatureCollection === void 0 ? void 0 : (_FeatureCollection$fe3 = FeatureCollection.features) === null || _FeatureCollection$fe3 === void 0 ? void 0 : _FeatureCollection$fe3.map(i => {\n          var _results$data4;\n\n          const value = (_results$data4 = results.data) === null || _results$data4 === void 0 ? void 0 : _results$data4.filter(s => {\n            const csvRow = s;\n            return csvRow.isClosed === 1 && csvRow.state.trim() === i.properties.abbr.trim();\n          }).length; // console.log(\"STATE\", i.properties.name, \"HAS \", value, \"CLOSINGS\")\n\n          return {\n            \"id\": i.id,\n            \"value\": value\n          };\n        }))]);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundColor: \"#E3ECE9\",\n      fontFamily: \"Mulish\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      sx: {\n        padding: \"1rem\"\n      },\n      children: \"Welcome to the QuaFoodies App!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      sx: {\n        padding: \"1rem\"\n      },\n      children: \"We think the restaurant industry can do data better. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        padding: \"1rem\"\n      },\n      children: \"Below you will find two maps outlining restaurant closures and restaurants that have stayed open since March 2020, which highlights the impact of the covid-19 pandemic.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      sx: {\n        backgroundColor: \"#E3ECE9\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Choropleth, {\n        data: openingData,\n        title: \"Lower 48 Open Restaurants\",\n        colors: \"BuPu\",\n        titleColor: \"#3B003A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Choropleth, {\n        data: closingData,\n        title: \"Lower 48 Closings\",\n        colors: \"PuRd\",\n        titleColor: \"#530018\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"space-evenly\",\n          alignItems: \"space-between\",\n          children: /*#__PURE__*/_jsxDEV(Toolbar, {\n            sx: {\n              backgroundColor: \"#656176\",\n              color: \"white\",\n              width: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: \"Restaurant survivability \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: showPrediction && /*#__PURE__*/_jsxDEV(PredictionMessage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"space-evenly\",\n          alignItems: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 12,\n            sx: {\n              padding: \"2rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: \"Select from inputs below to predict if your restaurant will succeed.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                size: \"small\",\n                children: /*#__PURE__*/_jsxDEV(StyledTextField, {\n                  sx: {\n                    marginBottom: \"1rem\"\n                  },\n                  fullWidth: true,\n                  size: \"small\",\n                  placeholder: \"Zip Code\",\n                  label: \"Zip Code\",\n                  value: zipCode,\n                  onChange: val => {\n                    setZipCode(val.target.value);\n                  },\n                  onBlur: () => {\n                    if (zipCode.length !== 5 || !/^\\d+$/.test(zipCode)) {\n                      setZipCodeError(\"Please enter a valid zip code\");\n                      return;\n                    }\n\n                    setZipCodeError(\"\");\n                  },\n                  error: zipCodeError !== \"\",\n                  helperText: zipCodeError,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"center\",\n            spacing: 3,\n            children: Features.map(i => {\n              var _Object$entries$filte, _Object$entries$filte2;\n\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: ((_Object$entries$filte = Object.entries(predictionRequest).filter(p => p[0] === i.name)) === null || _Object$entries$filte === void 0 ? void 0 : (_Object$entries$filte2 = _Object$entries$filte[0]) === null || _Object$entries$filte2 === void 0 ? void 0 : _Object$entries$filte2[1]) === 1,\n                      onChange: val => {\n                        const toggled = val.target.checked;\n                        console.log(val.target.checked); // @ts-ignore\n\n                        predictionRequest[i.name] = toggled ? 1 : 0;\n                        setPredictionRequest({ ...predictionRequest\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 60\n                    }, this),\n                    label: i.value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 73\n                }, this)\n              }, i.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 49\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"large\",\n              onClick: () => getPrediction(),\n              sx: {\n                padding: \"1rem\",\n                minWidth: \"300px\",\n                marginTop: \"3rem\",\n                marginBottom: \"1rem\",\n                backgroundColor: \"#656176\",\n                color: \"white\"\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"eaVIzX1JVtQ2pfnQs6L0UPy3+7g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/katherinegraessle/workspace/qua-foodies/CODE/src/App.tsx"],"names":["Button","Checkbox","Divider","FormControl","FormControlLabel","FormGroup","Grid","Toolbar","Typography","React","useEffect","useState","Choropleth","FeatureCollection","Papa","PredictionMessage","axios","Features","StyledTextField","App","openingData","setOpeningData","openingHeatMapData","setOpeningHeatmapData","zipCode","setZipCode","zipCodeError","setZipCodeError","closingData","setClosingData","showPrediction","setShowPrediction","predictionRequest","setPredictionRequest","pickup","delivery","reservations","hotDogs","pizza","traditionalAmerican","sandwiches","burgers","coffee","mexican","brunch","newAmerican","italian","chinese","bar","chickenWings","iceCream","seafood","bakery","salad","desserts","delis","japanese","bbq","juiceBar","cafe","mediterranean","steak","asianFusion","vegetarian","vegan","getPrediction","response","post","headers","parse","header","download","dynamicTyping","complete","results","console","log","data","features","map","i","value","filter","s","csvRow","isClosed","state","trim","properties","abbr","length","id","value2","backgroundColor","fontFamily","padding","color","width","marginBottom","val","target","test","Object","entries","p","name","toggled","checked","minWidth","marginTop"],"mappings":"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","sourcesContent":["import {\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormGroup,\n    Grid,\n    Toolbar,\n    Typography\n} from '@mui/material';\nimport React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {Choropleth} from \"./Choropleth\";\nimport {FeatureCollection} from \"./us-states\";\nimport Papa from \"papaparse\";\nimport {PredictionMessage} from \"./Components/PredictionMessage\";\nimport axios from \"axios\";\nimport {Features} from \"./Features\";\nimport StyledTextField from \"./Components/StyledTextField\";\n\nexport interface CSVRow {\n    id: string,\n    name: string,\n    isClosed: number,\n    \"display_phone\": string,\n    \"review_count\": number,\n    categories: string,\n    rating: number\n    price: number,\n    pickup: number,\n    delivery: number,\n    restaurant_reservation: number,\n    \"location.address1\": string,\n    \"location.address2\": string,\n    \"location.address3\": string,\n    \"location.city\": string,\n    \"location.zip_code\": number,\n    \"location.country\": string,\n    state: string,\n    \"location.display_address\": string[],\n    \"coordinates.latitude\": number,\n    \"coordinates.longitude\": number,\n}\n\nexport interface PredictionRequest {\n    zipCode: string\n    pickup: number,\n    delivery: number,\n    reservations: number,\n    hotDogs: number,\n    pizza: number,\n    traditionalAmerican: number,\n    sandwiches: number,\n    burgers: number,\n    coffee: number,\n    mexican: number,\n    brunch: number,\n    newAmerican: number,\n    italian: number,\n    chinese: number,\n    bar: number,\n    chickenWings: number,\n    iceCream: number,\n    seafood: number,\n    bakery: number,\n    salad: number,\n    desserts: number,\n    delis: number,\n    japanese: number,\n    bbq: number,\n    juiceBar: number,\n    cafe: number,\n    mediterranean: number,\n    steak: number,\n    asianFusion: number,\n    vegetarian: number,\n    vegan: number\n}\n\nfunction App() {\n    const [openingData, setOpeningData] = useState<any>(null)\n    const [openingHeatMapData, setOpeningHeatmapData] = useState<any>(null)\n    const [zipCode, setZipCode] = useState<string>(\"\")\n    const [zipCodeError, setZipCodeError] = useState<string>(\"\")\n    const [closingData, setClosingData] = useState<any>(null)\n    const [showPrediction, setShowPrediction] = useState<boolean>(false)\n    const [predictionRequest, setPredictionRequest] = useState<PredictionRequest>({\n        zipCode: \"\",\n        pickup: 0,\n        delivery: 0,\n        reservations: 0,\n        hotDogs: 0,\n        pizza: 0,\n        traditionalAmerican: 0,\n        sandwiches: 0,\n        burgers: 0,\n        coffee: 0,\n        mexican: 0,\n        brunch: 0,\n        newAmerican: 0,\n        italian: 0,\n        chinese: 0,\n        bar: 0,\n        chickenWings: 0,\n        iceCream: 0,\n        seafood: 0,\n        bakery: 0,\n        salad: 0,\n        desserts: 0,\n        delis: 0,\n        japanese: 0,\n        bbq: 0,\n        juiceBar: 0,\n        cafe: 0,\n        mediterranean: 0,\n        steak: 0,\n        asianFusion: 0,\n        vegetarian: 0,\n        vegan: 0\n    })\n\n    const getPrediction = async () => {\n        predictionRequest.zipCode = zipCode\n        const response = await axios.post(\"http://127.0.0.1:5000/api\", predictionRequest, {\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            }\n        })\n        setShowPrediction(true)\n    }\n    useEffect(() => {\n        Papa.parse('yelp_data_final.csv', {\n            header: true,\n            download: true,\n            dynamicTyping: true,\n            complete: function (results) {\n                console.log(results.data[0])\n                setOpeningData([...FeatureCollection?.features?.map(i => {\n                    const value = results.data?.filter(s => {\n                        const csvRow = s as CSVRow\n                        return (csvRow.isClosed === 0 && csvRow.state.trim() === i.properties.abbr.trim())\n                    }).length;\n                    // console.log(\"STATE\", i.properties.name, \"HAS \", value, \"OPENINGS\")\n                    return {\n                        \"id\": i.id,\n                        \"value\": value\n                    }\n                })])\n                setOpeningHeatmapData([...FeatureCollection?.features?.map(i => {\n                    const value = results.data?.filter(s => {\n                        const csvRow = s as CSVRow\n                        return (csvRow.isClosed === 0 && csvRow.state.trim() === i.properties.abbr.trim())\n                    }).length;\n                    const value2 = results.data?.filter(s => {\n                        const csvRow = s as CSVRow\n                        return (csvRow.isClosed === 1 && csvRow.state.trim() === i.properties.abbr.trim())\n                    }).length;\n                    // console.log(\"STATE\", i.properties.name, \"HAS \", value, \"OPENINGS\")\n                    return {\n                        \"id\": i.id,\n                        \"state\": i.properties.abbr,\n                        \"Open\": value,\n                        \"Closed\": value2,\n                    }\n                })])\n\n                setClosingData([...FeatureCollection?.features?.map(i => {\n                    const value = results.data?.filter(s => {\n                        const csvRow = s as CSVRow\n                        return (csvRow.isClosed === 1 && csvRow.state.trim() === i.properties.abbr.trim())\n                    }).length;\n                    // console.log(\"STATE\", i.properties.name, \"HAS \", value, \"CLOSINGS\")\n                    return {\n                        \"id\": i.id,\n                        \"value\": value\n                    }\n                })])\n\n            }\n        });\n    }, [])\n\n    return (\n        <div className=\"App\" style={{backgroundColor: \"#E3ECE9\", fontFamily: \"Mulish\"}}>\n            <Typography variant={\"h3\"} sx={{padding: \"1rem\"}}>Welcome to the QuaFoodies App!</Typography>\n            <Typography variant={\"h5\"} sx={{padding: \"1rem\"}}>We think the restaurant industry can do data\n                better. </Typography>\n            <Typography variant={\"body1\"} sx={{padding: \"1rem\"}}>Below you will find two maps outlining restaurant\n                closures and restaurants that have stayed open since March 2020, which highlights the impact of the\n                covid-19\n                pandemic.</Typography>\n            <Grid container justifyContent={\"center\"} alignItems={\"center\"} sx={{backgroundColor: \"#E3ECE9\"}}>\n                <Choropleth data={openingData} title={\"Lower 48 Open Restaurants\"} colors={\"BuPu\"}\n                            titleColor={\"#3B003A\"}></Choropleth>\n                <Choropleth data={closingData} title={\"Lower 48 Closings\"} colors={\"PuRd\"}\n                            titleColor={\"#530018\"}></Choropleth>\n                {/*<BarChart data={openingHeatMapData}></BarChart>*/}\n                <Grid container>\n                    <Grid container direction={\"row\"} justifyContent={\"space-evenly\"} alignItems={\"space-between\"}>\n                        <Toolbar sx={{backgroundColor: \"#656176\", color: \"white\", width: \"100%\"}}>\n                            <Typography variant={\"h5\"}>Restaurant survivability </Typography>\n                        </Toolbar>\n                    </Grid>\n                    <Divider></Divider>\n                    <Grid item xs={12} md={4}></Grid>\n                    <Grid item xs={12} md={4}>\n                        {showPrediction && <PredictionMessage/>}\n                    </Grid>\n                    <Grid item xs={12} md={4}></Grid>\n                    <Grid container direction={\"row\"} justifyContent={\"space-evenly\"} alignItems={\"space-between\"}>\n                        <Grid item md={12} sx={{padding: \"2rem\"}}>\n                            <Typography variant={\"body1\"}>Select from inputs below to predict if your restaurant will\n                                succeed.</Typography>\n                        </Grid>\n                        <Grid container justifyContent={\"center\"}>\n                            <Grid item>\n                                <FormControl fullWidth size={\"small\"}>\n                                    <StyledTextField\n                                        sx={{marginBottom: \"1rem\"}}\n                                        fullWidth\n                                        size={\"small\"}\n                                        placeholder={\"Zip Code\"}\n                                        label={\"Zip Code\"}\n                                        value={zipCode}\n                                        onChange={(val: any) => {\n                                            setZipCode(val.target.value)\n                                        }}\n                                        onBlur={() => {\n                                            if (zipCode.length !== 5 || !(/^\\d+$/.test(zipCode))) {\n                                                setZipCodeError(\"Please enter a valid zip code\")\n                                                return\n                                            }\n                                            setZipCodeError(\"\")\n                                        }}\n                                        error={zipCodeError !== \"\"}\n                                        helperText={zipCodeError}\n                                        variant={\"outlined\"}\n                                    />\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n\n                        <Grid container justifyContent=\"center\" spacing={3}>\n\n                            {Features.map(i => (<Grid key={i.name} item><FormGroup>\n                                <FormControlLabel control={<Checkbox\n                                    checked={Object.entries(predictionRequest).filter(p => p[0] === i.name)?.[0]?.[1] === 1}\n                                    onChange={(val) => {\n                                        const toggled = val.target.checked\n                                        console.log(val.target.checked)\n                                        // @ts-ignore\n                                        predictionRequest[i.name as keyof PredictionRequest] = toggled ? 1 : 0\n                                        setPredictionRequest({...predictionRequest,})\n                                    }}\n                                />} label={i.value}/>\n                            </FormGroup></Grid>))}\n                        </Grid>\n                        <Grid item xs={12} md={12}>\n                            <Button\n                                size=\"large\"\n                                onClick={() => getPrediction()}\n                                sx={{\n                                    padding: \"1rem\",\n                                    minWidth: \"300px\",\n                                    marginTop: \"3rem\",\n                                    marginBottom: \"1rem\",\n                                    backgroundColor: \"#656176\",\n                                    color: \"white\",\n                                }}>Submit</Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}