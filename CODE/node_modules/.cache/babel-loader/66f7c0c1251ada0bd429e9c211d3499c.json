{"ast":null,"code":"var _jsxFileName = \"/Users/katherinegraessle/workspace/qua-foodies/CODE/src/Choropleth.tsx\";\nimport React from \"react\";\nimport { ResponsiveChoropleth } from \"@nivo/geo\";\nimport { FeatureCollection } from \"./us-states\";\nimport { Box, Grid, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Choropleth = _ref => {\n  let {\n    data,\n    title,\n    colors,\n    titleColor\n  } = _ref;\n\n  const maxData = () => {\n    return Math.max.apply(Math, data === null || data === void 0 ? void 0 : data.map(o => parseInt(o.value))) || 0;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"  \", /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justifyContent: \"space-evenly\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          color: titleColor,\n          fontWeight: \"800\",\n          marginLeft: \"1rem\"\n        },\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: \"300px\",\n          width: \"640px\",\n          backgroundColor: \"#E3ECE9\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ResponsiveChoropleth, {\n          data: data || [],\n          features: FeatureCollection.features,\n          margin: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 20\n          },\n          colors: colors,\n          domain: [0, maxData()],\n          unknownColor: \"white\",\n          label: \"properties.name\",\n          valueFormat: \".2s\",\n          projectionScale: 400,\n          projectionTranslation: [1.69, 1.43],\n          borderWidth: 0.5,\n          borderColor: \"#152538\",\n          onClick: event => console.log(\"clicked!\", event),\n          legends: [{\n            anchor: 'bottom-left',\n            direction: 'column',\n            justify: true,\n            translateX: 100,\n            translateY: -50,\n            itemsSpacing: 0,\n            itemWidth: 94,\n            itemHeight: 18,\n            itemDirection: 'left-to-right',\n            itemTextColor: '#444444',\n            itemOpacity: 0.85,\n            symbolSize: 18,\n            effects: [{\n              on: 'hover',\n              style: {\n                itemTextColor: 'purple',\n                itemOpacity: 1\n              }\n            }]\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = Choropleth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Choropleth\");","map":{"version":3,"sources":["/Users/katherinegraessle/workspace/qua-foodies/CODE/src/Choropleth.tsx"],"names":["React","ResponsiveChoropleth","FeatureCollection","Box","Grid","Typography","Choropleth","data","title","colors","titleColor","maxData","Math","max","apply","map","o","parseInt","value","color","fontWeight","marginLeft","height","width","backgroundColor","features","top","right","bottom","left","event","console","log","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemTextColor","itemOpacity","symbolSize","effects","on","style"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {ResponsiveChoropleth} from \"@nivo/geo\";\nimport {FeatureCollection} from \"./us-states\"\nimport {Box, Grid, Typography} from '@mui/material';\n\nexport const Choropleth: React.FC<{ data: any, title: string, colors: string, titleColor: string }> = ({\n                                                                                                           data,\n                                                                                                           title,\n                                                                                                           colors,\n                                                                                                           titleColor\n                                                                                                       }) => {\n    const maxData = () => {\n        return Math.max.apply(Math, data?.map((o: any) => parseInt(o.value))) || 0\n    }\n    return (\n        <>  <Grid container direction={\"column\"} justifyContent={\"space-evenly\"} alignItems={\"center\"}>\n            <Typography variant={\"h4\"}\n                        sx={{color: titleColor, fontWeight: \"800\", marginLeft: \"1rem\"}}>{title}</Typography>\n            <Box sx={{height: \"300px\", width: \"640px\", backgroundColor: \"#E3ECE9\"}}>\n                <ResponsiveChoropleth\n                    data={data || []}\n                    features={FeatureCollection.features}\n                    margin={{top: 0, right: 0, bottom: 0, left: 20}}\n                    colors={colors}\n                    domain={[0, maxData()]}\n                    unknownColor=\"white\"\n                    label=\"properties.name\"\n                    valueFormat=\".2s\"\n                    projectionScale={400}\n                    projectionTranslation={[1.69, 1.43]}\n                    borderWidth={0.5}\n                    borderColor=\"#152538\"\n                    onClick={(event) => console.log(\"clicked!\", event)}\n                    legends={[\n                        {\n                            anchor: 'bottom-left',\n                            direction: 'column',\n                            justify: true,\n                            translateX: 100,\n                            translateY: -50,\n                            itemsSpacing: 0,\n                            itemWidth: 94,\n                            itemHeight: 18,\n                            itemDirection: 'left-to-right',\n                            itemTextColor: '#444444',\n                            itemOpacity: 0.85,\n                            symbolSize: 18,\n                            effects: [\n                                {\n                                    on: 'hover',\n                                    style: {\n                                        itemTextColor: 'purple',\n                                        itemOpacity: 1\n                                    }\n                                }\n                            ]\n                        }\n                    ]}\n                />\n            </Box>\n        </Grid>\n        </>)\n}\n"]},"metadata":{},"sourceType":"module"}